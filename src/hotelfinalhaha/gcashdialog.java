/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package hotelfinalhaha;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author Admin
 */
public class gcashdialog extends javax.swing.JDialog {
 private double totalAmount;
    private Connection con;
private String selectedPayment;
private int reservationID;
private JFrame parent;

    public gcashdialog(java.awt.Frame parent, boolean modal, double totalAmount,String selectedPayment,int reservationID) {
        super(parent, modal);
        initComponents();
        this.totalAmount = totalAmount;
        this.selectedPayment = selectedPayment;
        this.reservationID = reservationID;
         this.parent = (JFrame) parent;
        setTotalAmount(totalAmount);
        con = connector.Connect();
        
    }
 public void setTotalAmount(double totalAmount) {
        jLabel3.setText(String.format("%.2f", totalAmount)); // Set the total amount label
    }
 public int getAmountFromDatabase(int UID, int userId) {
        int amount = 0;  // Default amount if nothing is found
        String query = "SELECT rd.amount FROM reservationdetails rd " +
                       "JOIN reservations r ON rd.reservationID = r.reservationID " +
                       "WHERE rd.roomID = ? AND r.userID = ?";  // Adjust based on your table and column names
        
        try (Connection conn = connector.Connect();  
             PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, UID);  
            stmt.setInt(2, userId);         
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    amount = rs.getInt("amount");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        return amount;
    }

private String getLoggedInUsername(int userID) {
    String username = null;
    String query = "SELECT username FROM users WHERE userID = ?";
    
    try (Connection conn = connector.Connect();  // Using your connector class to get the connection
         PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setInt(1, userID);  // Set the userID parameter
        
        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                username = rs.getString("username");  // Retrieve the username from the result set
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error retrieving username: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    
    return username;  // Return the username (null if not found)
}
private String getrESERVEID(int userID) {
    String username = null;
    String query = "SELECT username FROM users WHERE userID = ?";
    
    try (Connection conn = connector.Connect();  // Using your connector class to get the connection
         PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setInt(1, userID);  // Set the userID parameter
        
        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                username = rs.getString("username");  // Retrieve the username from the result set
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error retrieving username: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    
    return username;  // Return the username (null if not found)
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        kButton1 = new com.k33ptoo.components.KButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setActionCommand("<Not Set>");
        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Enter Gcash Number");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Amount");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("jLabel3");

        txtPayment.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Enter amount");

        kButton1.setText("PAY");
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/Gcash-Brand-Identity-10-ezgif.com-resize.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jLabel1)
                    .addComponent(txtPayment))
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void txtPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPaymentActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        if (selectedPayment.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a payment method.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String paymentAmountText = txtPayment.getText().trim();
        if (paymentAmountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the payment amount.", "Missing Information", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            double paymentAmount = Double.parseDouble(paymentAmountText);
            double totalAmount = Double.parseDouble(jLabel3.getText());
            int userID = Login.UID;
            String username = getLoggedInUsername(userID);

            if (username == null || username.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username not found. Unable to proceed.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if ("GCash".equals(selectedPayment) && paymentAmount != totalAmount) {
                JOptionPane.showMessageDialog(this, "GCash payment must be exactly the total amount.", "Payment Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            insertPayment(userID, selectedPayment, totalAmount, reservationID);
            JOptionPane.showMessageDialog(this, "Payment of " + totalAmount + " via " + selectedPayment + " processed successfully!", "Payment Successful", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            parent.dispose();
            clientdashboard dashboard = new clientdashboard();
            dashboard.setVisible(true);
           

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid payment amount. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_kButton1ActionPerformed
 private void insertPayment(int userID, String paymentMethod, double paymentAmount, int reserveID) {
        try {
            if (!isValidPaymentMethod(paymentMethod)) {
                JOptionPane.showMessageDialog(this, "Invalid payment method. Please select a valid method.", "Payment Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String query = "INSERT INTO payments (userID, paymentMethod, amountPaid, reservationID, paymentDate) VALUES (?, ?, ?, ?, CURDATE())";
            PreparedStatement pat = con.prepareStatement(query);
            pat.setInt(1, userID);
            pat.setString(2, paymentMethod);
            pat.setDouble(3, paymentAmount);
            pat.setInt(4, reserveID);
            pat.executeUpdate();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error processing payment: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }


// Method to validate paymentMethod (you can extend this list with other methods)
private boolean isValidPaymentMethod(String paymentMethod) {
    String[] validMethods = {"GCash", "Card", "PayMaya"};  // List of valid methods
    for (String method : validMethods) {
        if (method.equalsIgnoreCase(paymentMethod)) {
            return true;
        }
    }
    return false;
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gcashdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gcashdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gcashdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gcashdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private com.k33ptoo.components.KButton kButton1;
    private javax.swing.JTextField txtPayment;
    // End of variables declaration//GEN-END:variables
}
